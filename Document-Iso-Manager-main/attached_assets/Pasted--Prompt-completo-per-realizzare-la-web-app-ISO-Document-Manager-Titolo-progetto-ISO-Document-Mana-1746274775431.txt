🎯 Prompt completo per realizzare la web app ISO Document Manager
Titolo progetto: ISO Document Manager su Google Drive
Tecnologie: Node.js (Express) + React + Tailwind CSS + MongoDB

🔐 Autenticazione & Sicurezza
Login utente con:

Email + Password

Accesso riservato a utenti registrati, con almeno 2 ruoli: admin (modifica/gestione), viewer (consultazione sola lettura)

Middleware Express per protezione endpoint

Hash password (bcrypt) e JWT per sessioni sicure

Rate limiting, helmet, cors configurati

📁 Integrazione Google Drive (cartella Workspace)
Configurazione Google API (OAuth2) lato server

Il backend accede a una cartella principale di Drive sincronizzata localmente (gestita via GoogleDriveSetup.exe)

Scannerizzazione periodica (cron job o trigger on-demand) della cartella:

Lettura gerarchia: 1, 1.1, 1.2.1, … fino a 10.10.10

Estrazione metadati da filename (pattern: punto-norma_nomefile_Rev.X_YYYY-MM-DD)

Parsing dei file Excel (vedi sezione alert)

Costruzione JSON con struttura navigabile

📑 Home Page – Indice dinamico
Frontend React che visualizza una tabella o struttura ad albero:

Ordinamento automatico in ordine crescente per punto norma (1, 1.1, 1.2.1…)

Solo l’ultima revisione per nomefile mostrata

Tutti i file vecchi con revisione inferiore vengono spostati in /obsoleti

Ogni riga dell’indice mostra:

Titolo del documento

Link al file su Google Drive

Pulsante ✏️ (modifica) visibile solo ad admin

Pulsante 🗑️ (archivia in OLD) visibile solo ad admin

Se rilevato alert da Excel:

⚠️ giallo se mancano <30 giorni

🔴 rosso se scadenza superata

Supporto ai link figli: se un documento padre cita file figli, i link sono cliccabili e si aprono direttamente

🔍 Parsing alert scadenze da Excel
Per ogni file Excel letto:

Se la cella A1 contiene stringhe tipo “⚠️” o “🔴”, viene segnalata come alert

La logica Excel è: OGGI + 1 ANNO - 30gg → ALERT

Si usa xlsx o exceljs per leggere A1

Il backend aggiorna il flag alertStatus nel DB:

js
Copia
Modifica
alertStatus: 'none' | 'warning' | 'expired'
🧠 Database MongoDB – Struttura suggerita
js
Copia
Modifica
// Collection: documents
{
  _id,
  title,
  path, // punto norma es: "8.2.1"
  revision, // es: "Rev.3"
  createdAt,
  driveUrl,
  fileType, // es: 'pdf', 'docx'
  alertStatus: 'none' | 'warning' | 'expired',
  parentId: ObjectId, // link al documento padre
  isObsolete: false
}
js
Copia
Modifica
// Collection: users
{
  _id,
  email,
  passwordHash,
  role: 'admin' | 'viewer',
  twoFactorSecret
}
js
Copia
Modifica
// Collection: logs (per audit trail)
{
  _id,
  userId,
  action: "upload" | "update" | "delete" | "revision" | "login",
  documentId,
  timestamp
}
🛠 Funzionalità admin
Caricamento nuovi file (upload via interfaccia o da Google Drive sync)

Aggiornamento revisione → obsoleta la precedente

Assegnazione documenti figli a un padre

Visualizzazione, modifica, archiviazione file

Accesso area “/obsoleti” riservata ad admin

Logging automatico in logs di ogni azione effettuata da ogni utente

💅 UI moderna (React + Tailwind)
Tema chiaro/scuro

Layout responsive

Navigazione a sinistra con menu ad albero per punti norma

Icone per tipo file (PDF, Word, Excel, immagine)

Badge colorati per alert

Modal per anteprima file

Ricerca globale per parola chiave o punto norma

🔄 Aggiornamento automatico indice
Ogni salvataggio file (locale o upload) triggera:

Parsing nome file

Verifica revisione

Aggiornamento indice

Spostamento automatico vecchia revisione in /OLD (flag isObsolete: true)

Costruzione link al file nel Drive

Parsing Excel con eventuale aggiornamento alertStatus

Scrittura log nel sistema di audit (logs)

✅ Requisiti ISO coperti
Archiviazione ordinata e coerente con l’indice normativo

Tracciabilità completa documenti e revisioni

Alert automatici su scadenze

Link diretti ai file da indice

Accesso sicuro e profilato

Documentazione dematerializzata con audit trail

Storico delle azioni per ogni utente (upload, modifica, login)

🔚 Conclusione
L’obiettivo è avere una web app autosufficiente, con indicizzazione, scadenziario, collegamenti tra documenti e gestione revisioni, conforme alle norme ISO, facile da usare e da manutenere, con accesso protetto, tracciamento delle azioni e UI moderna.
Zero necessità di cercare file a mano: tutto è gestito in automatico dal sistema e accessibile con pochi click, in piena tracciabilità e trasparenza.